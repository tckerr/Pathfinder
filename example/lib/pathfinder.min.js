!function(t){"use strict";function s(){var t={node:function(t,s,n){"undefined"==typeof n&&(n=!0),this.x=t,this.y=s,this.parent=null,this.passable=!0},util:{sumVector:function(t,s){return[t.x+s.x,t.y+s.y]},compareVector:function(t,s){return t.x==s.x&&t.y==s.y},lowerFCost:function(t,s){return t.fCost>s.fCost?-1:t.fCost<s.fCost?1:0},adjacentNodes:function(t,s){var n=s.length-1,e=s[0].length-1,o=[];return t.x>=1&&(o.push(s[t.x-1][t.y]),t.y>0&&o.push(s[t.x-1][t.y-1]),t.y<e&&o.push(s[t.x-1][t.y+1])),t.x<n&&(o.push(s[t.x+1][t.y]),t.y>0&&o.push(s[t.x+1][t.y-1]),t.y<e&&o.push(s[t.x+1][t.y+1])),t.y>0&&o.push(s[t.x][t.y-1]),t.y<e&&o.push(s[t.x][t.y+1]),o.filter(function(t){return t.passable})}},findPath:function(s,n,e){s.forEach(function(t){t.forEach(function(t){t.is_start=!1})});var o=[],i=[];n.is_start=!0;var r;for(n.initialize(null,e.x,e.y),o.push(n);;){if(o.length<1)return!1;if(o.sort(t.util.lowerFCost),r=o.splice(o.length-1,1)[0],i.push(r),r==e)break;var h=t.util.adjacentNodes(r,s);h.forEach(function(t){for(var s=!1,n=!1,h=0;h<o.length;h++)t==o[h]&&(s=!0,t.gCost>r.gCost&&(t.parent=r,t.setGCost(),t.setFCost()));if(!s)for(var h=0;h<i.length;h++)if(t==i[h]){n=!0;break}s||n||(t.initialize(r,e.x,e.y),o.push(t))})}for(var a=[];null!==r.parent;)a.push(r),r=r.parent;return a.reverse(),a}};return t.node.prototype.setFCost=function(){this.fCost=this.hCost+this.gCost},t.node.prototype.setHCost=function(t,s){var n=Math.abs(t-this.x),e=Math.abs(s-this.y);this.hCost=10*(n+e)},t.node.prototype.setGCost=function(){var t=Math.abs(this.parent.x-this.x),s=Math.abs(this.parent.y-this.y);0!=s&&0!=t?this.gCost=this.parent.gCost+14:this.gCost=this.parent.gCost+10},t.node.prototype.initialize=function(t,s,n){this.is_start||"undefined"==typeof t?this.gCost=0:(this.parent=t,this.setGCost()),this.setHCost(s,n),this.setFCost()},t}"undefined"==typeof Pathfinder?t.Pathfinder=s():console.log("Error defining Pathfinder: already defined.")}(window);